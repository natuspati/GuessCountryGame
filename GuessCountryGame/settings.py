"""
Django settings for GuessCountryGame project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from configurations import Configuration, values
import dj_database_url
from dotenv import load_dotenv


class Dev(Configuration):
    load_dotenv()
    
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent
    
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/
    
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'django-insecure-#9zn3+%yq)8(y)(_@pllkrw@$1hv+j0$=q#-gncasnh*+%fg_1'
    
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = values.BooleanValue(True)
    
    ALLOWED_HOSTS = values.ListValue(['localhost', '0.0.0.0'])
    
    # Application definition
    
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
    
        'custom_auth',
        
        'GuessCountry.apps.GuesscountryConfig',
        
        'cache_fallback',  # Set fallback cache backend.
    ]
    
    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]
    
    ROOT_URLCONF = 'GuessCountryGame.urls'
    
    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [BASE_DIR / 'GuessCountry/templates']
            ,
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
                'libraries': {
                    'GuessCountry_tags': 'GuessCountry.templatetags.extras',
                    'admin.urls': 'django.contrib.admin.templatetags.admin_urls',
                },
            },
        },
    ]
    
    WSGI_APPLICATION = 'GuessCountryGame.wsgi.application'
    
    # Database
    # https://docs.djangoproject.com/en/4.1/ref/settings/#databases
    
    DATABASES = {
        'default': dj_database_url.config(default=f'sqlite:///{BASE_DIR}/db.sqlite3'),
    }
    
    # Password validation
    # https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
    
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]
    
    # Internationalization
    # https://docs.djangoproject.com/en/4.1/topics/i18n/
    
    LANGUAGE_CODE = 'en-us'
    
    TIME_ZONE = values.Value('UTC')
    
    USE_I18N = True
    
    USE_TZ = True
    
    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.1/howto/static-files/
    
    STATIC_URL = 'GuessCountry/static/'
    
    # Default primary key field type
    # https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
    
    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
    
    # Logging settings
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse',
            },
        },
        'formatters': {
            'simple': {
                'format': '{levelname} {message}',
                'style': '{',
            },
            'verbose': {
                'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
                'style': '{',
            },
        },
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
                'stream': 'ext://sys.stdout',
                'formatter': 'simple',
            },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
                'filters': ['require_debug_false'],
                'formatter': 'verbose',
            },
            'file': {
                'level': 'DEBUG',
                'class': 'logging.FileHandler',
                'filename': BASE_DIR / 'var/debug.log',
                'formatter': 'verbose'
            },
        },
        'loggers': {
            'django.request': {
                'handlers': ['mail_admins'],
                'level': 'ERROR',
                'propagate': True,
            },
            'GuessCountry': {
                'handlers': ['console', 'file'],
                'level': 'DEBUG',
                'propagate': True  # Change to False in production environment
            },
        },
    }
    
    ADMINS = values.SingleNestedTupleValue()
    
    # Password hashing settings
    PASSWORD_HASHERS = [
        'django.contrib.auth.hashers.Argon2PasswordHasher',
        'django.contrib.auth.hashers.PBKDF2PasswordHasher',
        'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
        'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    ]
    
    # Caching settings
    # For Dev environment, use dummy caching.
    CACHES = {
        'default': {
            'BACKEND':
                'django.core.cache.backends.dummy.DummyCache',
        },
    }

    # Custom authentication settings
    AUTH_USER_MODEL = 'custom_auth.User'


class Prod(Dev):
    DEBUG = False
    SECRET_KEY = values.SecretValue()
    
    # For Prod environment, use memcached with fallback on file cache.
    CACHES = {
        'default': {
            'BACKEND': 'cache_fallback.FallbackCache',
        },
        
        'main_cache': {
            'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
            'LOCATION': '/var/memcached.sock',
            'TIMEOUT': 600,
        },
        'fallback_cache': {
            'BACKEND':
                'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION': '/var/django_cache',
            'TIMEOUT': 600,
        }
        
    }
